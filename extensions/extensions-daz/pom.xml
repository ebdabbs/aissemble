<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.boozallen.aissemble</groupId>
        <artifactId>extensions</artifactId>
        <version>1.7.0-SNAPSHOT</version>
    </parent>

    <artifactId>extensions-daz</artifactId>

    <name>aiSSEMBLE::Extensions::Daz</name>
    <description>Establishes a shared Poetry cache for all aiSSEMBLE Docker images to leverage</description>
    <packaging>habushu</packaging>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>aissemble-foundation-core-python</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>aissemble-foundation-pdp-client-python</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>aissemble-foundation-model-training-api</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>aissemble-foundation-pdp-client-python</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>aissemble-foundation-versioning-service</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>aissemble-extensions-data-delivery-spark-py</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>aissemble-extensions-model-training-api-sagemaker</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
    </dependencies>

    <build>
        <directory>dist</directory>
        <plugins>
            <plugin>
                <groupId>org.technologybrewery.habushu</groupId>
                <artifactId>habushu-maven-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                    <skipDeploy>true</skipDeploy>
                </configuration>
                <!--  Manually call on all Habushu executions through compile lifecycle phase  -->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>default-clean-habushu</id>-->
<!--                        <phase>clean</phase>-->
<!--                        <goals>-->
<!--                            <goal>clean-habushu</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>default-initialize-habushu</id>-->
<!--                        <phase>initialize</phase>-->
<!--                        <goals>-->
<!--                            <goal>initialize-habushu</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>default-validate-pyenv-and-poetry</id>-->
<!--                        <phase>validate</phase>-->
<!--                        <goals>-->
<!--                            <goal>validate-pyenv-and-poetry</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>default-baton-migrate</id>-->
<!--                        <phase>validate</phase>-->
<!--                        <goals>-->
<!--                            <goal>baton-migrate</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>default-install-dependencies</id>-->
<!--                        <phase>compile</phase>-->
<!--                        <goals>-->
<!--                            <goal>install-dependencies</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <licenseFile>LICENSE</licenseFile>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
